/**
 * Vehicle Diary OpenAPI 3.0
 * <H2> Creqte an app that will be useful to keep track of evens that are part of a vehicle's lifecycle... </>   sample use cases: - i am having my car motor's oil change in every 10000 km or 1 year - which ever come first - i want to be notified - i want to check when was the last time i was having breaks repair or check, or when i changed my front swipers - i have several vehicles - i want to track all of their events and be notified somehow - i want to have list of repair workshops that i am visiting and a quick way to contact with them for specific issue  Some useful links: - [Vehicle Diary repository](https://github.com/cool-element-com/vehicle-diary) - [Vehicle Diary Priority Board](https://github.com/orgs/cool-element-com/projects/2/views/2)
 *
 * OpenAPI spec version: n/a
 * Contact: cool.element.com@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.models

import io.swagger.client.models.VEvent

/**
 * 
 * @param id 
 * @param name 
 * @param brand 
 * @param model 
 * @param year 
 * @param vin 
 * @param licensePlate 
 * @param purchaseDate 
 * @param image 
 * @param odometer 
 * @param createdAt 
 * @param updatedAt 
 * @param events 
 */
data class Vehicle (

    val id: kotlin.Long,
    val name: kotlin.String,
    val brand: kotlin.String,
    val model: kotlin.String,
    val year: kotlin.Int,
    val vin: kotlin.String? = null,
    val licensePlate: kotlin.String? = null,
    val purchaseDate: java.time.LocalDateTime? = null,
    val image: kotlin.String? = null,
    val odometer: kotlin.Int,
    val createdAt: java.time.LocalDateTime? = null,
    val updatedAt: java.time.LocalDateTime? = null,
    val events: kotlin.Array<VEvent>? = null
) {
}